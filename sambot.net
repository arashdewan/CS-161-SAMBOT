net
{
	propagationenginegenerator1791944048146838126L = "edu.ucla.belief.approx.BeliefPropagationSettings@2669c91b";
	recoveryenginegenerator6944530267470113528l = "edu.ucla.util.SettingsImpl@710f52af";
	jenginegenerator6060830225489488864L = "edu.ucla.belief.inference.JoinTreeSettings@3176aa63";
	node_size = (130.0 55.0);
}

node DogBowelTrouble
{
	states = ("Yes" "No" );
	position = (-19 -4);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable12";
	label = "DogBowelTrouble";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node SoundSensor
{
	states = ("On" "Off" );
	position = (91 -421);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable2";
	label = "SoundSensor";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node ExpectingGuests
{
	states = ("Yes" "No" );
	position = (508 -10);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable0";
	label = "ExpectingGuests";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node LightSensor
{
	states = ("On" "Off" );
	position = (416 -415);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable3";
	label = "LightSensor";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node Battery
{
	states = ("OK" "Dead" );
	position = (254 -552);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable6";
	label = "Battery";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node SoundSensorHealth
{
	states = ("OK" "Broken" );
	position = (-51 -265);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable7";
	label = "SoundSensorHealth";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node LightSensorHealth
{
	states = ("OK" "Broken" );
	position = (497 -273);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable8";
	label = "LightSensorHealth";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node FamilyHome
{
	states = ("Yes" "No" );
	position = (203 -4);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable1";
	label = "FamilyHome";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node DogOutside
{
	states = ("Yes" "No" );
	position = (156 -135);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable10";
	label = "DogOutside";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node HearableBarking
{
	states = ("Yes" "No" );
	position = (-57 -137);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable5";
	label = "HearableBarking";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node OutdoorLight
{
	states = ("On" "Off" );
	position = (319 -273);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable11";
	label = "OutdoorLight";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node DogBarking
{
	states = ("Yes" "No" );
	position = (157 -266);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable9";
	label = "DogBarking";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
potential ( DogBowelTrouble | )
{
	data = (	0.7821	0.2179	);
}
potential ( SoundSensor | Battery SoundSensorHealth DogBarking )
{
	data = ((((	0.8445450686288383	0.15545493137116173	)
		(	0.11313858272178619	0.8868614172782138	))
		((	0.3466822566501023	0.6533177433498977	)
		(	0.07814894269077537	0.9218510573092247	)))
		(((	0.6027713625866051	0.3972286374133949	)
		(	0.11745244003308519	0.8825475599669148	))
		((	0.18811881188118812	0.8118811881188119	)
		(	0.0	1.0	))));
}
potential ( ExpectingGuests | )
{
	data = (	0.1489	0.8511	);
}
potential ( LightSensor | Battery LightSensorHealth OutdoorLight )
{
	data = ((((	0.9690821741241066	0.03091782587589347	)
		(	0.1161847789963443	0.8838152210036557	))
		((	0.7562595809913132	0.24374041900868676	)
		(	0.1085814360770578	0.8914185639229422	)))
		(((	0.7156234598324298	0.28437654016757025	)
		(	0.09391304347826086	0.9060869565217391	))
		((	0.5633802816901409	0.43661971830985913	)
		(	0.0	1.0	))));
}
potential ( Battery | )
{
	data = (	0.9664	0.0336	);
}
potential ( SoundSensorHealth | )
{
	data = (	0.9142	0.0858	);
}
potential ( LightSensorHealth | )
{
	data = (	0.96735	0.03265	);
}
potential ( FamilyHome | ExpectingGuests )
{
	data = ((	0.8237071860308932	0.1762928139691068	)
		(	0.22600164493009048	0.7739983550699095	));
}
potential ( DogOutside | DogBowelTrouble FamilyHome )
{
	data = (((	0.8831568330811901	0.11684316691880989	)
		(	0.9275820113248163	0.07241798867518368	))
		((	0.17113594040968344	0.8288640595903166	)
		(	0.8709169291991378	0.1290830708008622	)));
}
potential ( HearableBarking | )
{
	data = (	0.4832	0.5168	);
}
potential ( OutdoorLight | ExpectingGuests FamilyHome )
{
	data = (((	0.9070525886669385	0.09294741133306156	)
		(	0.9361904761904762	0.06380952380952382	))
		((	0.28190798024434627	0.7180920197556537	)
		(	0.9220493358633776	0.0779506641366224	)));
}
potential ( DogBarking | HearableBarking DogOutside )
{
	data = (((	0.8862533398767654	0.11374666012323463	)
		(	0.7320525783619818	0.2679474216380182	))
		((	0.0633189141746599	0.9366810858253402	)
		(	0.4429146367295065	0.5570853632704935	)));
}
